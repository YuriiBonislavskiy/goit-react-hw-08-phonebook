{"version":3,"file":"static/js/558.52d4ded4.chunk.js","mappings":"gTAuJA,EA9I2B,SAAAA,GACzB,IAMMC,EAASC,EAAAA,KAAaC,MAAMC,EAAAA,IAE5BC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,GAAAA,UAkB7B,OACE,UAACC,EAAA,GAAD,CAAMC,WAAS,EAACC,UAAU,OAA1B,WACE,SAACC,EAAA,GAAD,KACA,SAACH,EAAA,GAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,UAAW,EAAGC,OAAO,OAAtD,UACE,SAACC,EAAA,EAAD,CACEC,GAAI,CACFC,GAAI,EACJC,GAAI,EACJC,GAAI,KACJC,KAAM,EACNC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdC,OAAQ,EAVV,UAYE,SAAC,KAAD,CACEC,cA5CY,CACpBC,MAAO,GACPC,MAAO,GACPC,OAAQ,IA0CAC,iBAAkBjC,EAClBkC,SAnCW,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UACtBN,EAAyBK,EAAzBL,MAAOC,EAAkBI,EAAlBJ,MAAOC,EAAWG,EAAXH,OAEhBK,EAAI,UAAMP,EAAN,YAAeC,GACzB,GAAIzB,EAASgC,WAAU,SAAAC,GAAO,OAAIA,EAAQF,OAASA,CAArB,KAA8B,EAC1DG,MAAM,GAAD,OAAIH,EAAJ,gCADP,CAIA,IAAMI,EAAa,CACjBJ,KAAMA,EACNL,OAAQA,GAEV5B,EAASsC,EAAAA,GAAAA,YAAgCD,IACzCL,GANC,CAOF,EAkBO,SAKG,SAAArC,GACC,IACEoC,EAMEpC,EANFoC,OACAQ,EAKE5C,EALF4C,QACAC,EAIE7C,EAJF6C,OACAC,EAGE9C,EAHF8C,aACAC,EAEE/C,EAFF+C,WACAC,EACEhD,EADFgD,aAEF,OACE,iBAAMb,SAAUa,EAAhB,UACE,UAACtC,EAAA,GAAD,CAAMC,WAAS,EAACsC,QAAS,EAAG5B,GAAI,CAAE6B,GAAI,EAAGC,GAAI,GAA7C,WACE,SAACzC,EAAA,GAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,UACE,SAACoC,EAAA,EAAD,CACEC,GAAG,QACHC,MAAM,aACNC,MAAOnB,EAAOL,MACdyB,SAAUV,EACVW,OAAQV,EACRW,WAAYd,EAAQb,MAAQc,EAAOd,MAAQ,GAC3C4B,MAAOf,EAAQb,OAAS6B,QAAQf,EAAOd,OACvC8B,OAAO,QACPC,QAAQ,WACRC,WAAS,OAGb,SAACrD,EAAA,GAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,UACE,SAACoC,EAAA,EAAD,CACEC,GAAG,QACHC,MAAM,YACNC,MAAOnB,EAAOJ,MACdwB,SAAUV,EACVW,OAAQV,EACRW,WAAYd,EAAQZ,MAAQa,EAAOb,MAAQ,GAC3C2B,MAAOf,EAAQZ,OAAS4B,QAAQf,EAAOb,OACvC6B,OAAO,QACPC,QAAQ,WACRC,WAAS,OAGb,SAACrD,EAAA,GAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAvB,UAaE,SAAC,KAAD,CACEqC,GAAG,SACHW,mBAAoB,CAAC,MACrBC,eAAe,KACfT,SAAUV,EAAa,UACvBS,MAAOnB,EAAOH,OACdiC,UAAQ,EAERT,OAAQV,EACRW,WAAYd,EAAQX,OAASY,EAAOZ,OAAS,GAC7C0B,MAAOf,EAAQX,QAAU2B,QAAQf,EAAOZ,QACxC4B,OAAO,QACPC,QAAQ,WACRC,WAAS,OAGb,SAACrD,EAAA,GAAD,CAAMI,MAAI,EAACC,GAAI,GAAf,UACE,SAACoD,EAAA,EAAD,CACEC,KAAK,SACLL,WAAS,EACTD,QAAQ,YACRzC,GAAI,CAAE6B,GAAI,GACVnC,GAAI,GACJC,GAAI,GANN,+BAcT,UAOZ,E,uCCrHD,EA3Be,WACb,IAAMX,GAAWC,EAAAA,EAAAA,MACX+D,GAAS7D,EAAAA,EAAAA,IAAYC,EAAAA,GAAAA,WAO3B,OACE,SAACC,EAAA,GAAD,CAAMC,WAAS,EAACsC,QAAS,EAAG5B,GAAI,CAAE6B,GAAI,EAAGC,GAAI,GAA7C,UACE,SAACzC,EAAA,GAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,UAAW,EAAGC,OAAO,OAAtD,UACE,SAACiC,EAAA,EAAD,CAEEE,MAAM,wBACNc,KAAK,OACL9B,KAAK,iBACLkB,SAbe,SAAAc,GACrB,IAAQf,EAAUe,EAAMC,OAAhBhB,MACRlD,GAASmE,EAAAA,EAAAA,GAAUjB,GACpB,EAWOA,MAAOc,EACPP,QAAQ,WACRC,WAAS,OAKlB,E,sCCxBYU,EAAmB,SAAC,GAA0B,IAAxBpB,EAAuB,EAAvBA,GAAIf,EAAmB,EAAnBA,KAAML,EAAa,EAAbA,OACrC5B,GAAWC,EAAAA,EAAAA,MAMjB,OACE,iCACE,SAACI,EAAA,GAAD,CAAMI,MAAI,EAACC,GAAI,IAAKM,GAAI,CAAE6B,GAAI,IAA9B,SAEGZ,KAGH,SAAC5B,EAAA,GAAD,CAAMI,MAAI,EAACC,GAAI,EAAGM,GAAI,CAAE6B,GAAI,IAA5B,SAEGjB,KAEH,SAACvB,EAAA,GAAD,CAAMI,MAAI,EAACC,IAAE,EAACM,GAAI,CAAE8B,GAAI,IAAxB,UACE,SAACgB,EAAA,EAAD,CACEL,QAAQ,WACRY,WAAW,SAACC,EAAA,EAAD,IACXC,QAAS,kBAnBO,SAAAvB,GACtBhD,EAASsC,EAAAA,EAAAA,eAAmCU,GAC7C,CAiBsBwB,CAAgBxB,EAAtB,EACThC,GAAI,CAAEC,GAAI,SAcnB,EAEDmD,EAAiBK,UAAY,CAC3BzB,GAAI0B,IAAAA,OAAAA,WACJzC,KAAMyC,IAAAA,OAAAA,WACN9C,OAAQ8C,IAAAA,OAAAA,YAGV,QCdA,EAhCqB,WACnB,IAAMxE,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,GAAAA,UACvB4D,GAAS7D,EAAAA,EAAAA,IAAYC,EAAAA,GAAAA,WAQrBuE,EAPqB,WACzB,IAAMC,EAAmBZ,EAAOa,cAChC,OAAO3E,EAAS8D,QAAO,SAAA7B,GAAO,OAC5BA,EAAQF,KAAK4C,cAAcC,SAASF,EADR,GAG/B,CAEuBG,GAExB,OACE,SAAC1E,EAAA,GAAD,CAAMC,WAAS,EAACsC,QAAS,EAAzB,SACG+B,EAAgBK,KAAI,gBAAGhC,EAAH,EAAGA,GAAIf,EAAP,EAAOA,KAAML,EAAb,EAAaA,OAAb,OACnB,SAACvB,EAAA,GAAD,CACEC,WAAS,EACT2E,UAAU,MACVrC,QAAS,EAHX,UAUE,SAAC,EAAD,CAAkBI,GAAIA,EAAIf,KAAMA,EAAML,OAAQA,KAJzCoB,EAPY,KAgB1B,E,8BCJD,EALkB,CAChBkC,cAxBoB,WACpB,OACE,UAACC,EAAA,EAAD,CAAOvC,QAAS,EAAhB,WACE,SAACwC,EAAA,EAAD,CAAU3B,QAAQ,cAAc4B,MAAO,IAAKC,OAAQ,MACpD,SAACF,EAAA,EAAD,CAAU3B,QAAQ,cAAc4B,MAAO,IAAKC,OAAQ,MACpD,SAACF,EAAA,EAAD,CAAU3B,QAAQ,cAAc4B,MAAO,IAAKC,OAAQ,OAIzD,EAgBCC,iBAduB,WACvB,OACE,UAACJ,EAAA,EAAD,CAAOvC,QAAS,EAAhB,WACE,SAACwC,EAAA,EAAD,CAAU3B,QAAQ,cAAc4B,MAAO,GAAIC,OAAQ,MACnD,SAACF,EAAA,EAAD,CAAU3B,QAAQ,cAAc4B,MAAO,IAAKC,OAAQ,MACpD,SAACF,EAAA,EAAD,CAAU3B,QAAQ,cAAc4B,MAAO,IAAKC,OAAQ,MACpD,SAACF,EAAA,EAAD,CAAU3B,QAAQ,UAAU4B,MAAO,IAAKC,OAAQ,MAChD,SAACF,EAAA,EAAD,CAAU3B,QAAQ,cAAc4B,MAAO,GAAIC,OAAQ,OAGxD,GCoBD,EAjCiB,WACf,IAAMtF,GAAWC,EAAAA,EAAAA,MACXuF,GAAYrF,EAAAA,EAAAA,IAAYC,EAAAA,GAAAA,cACxBqF,GAAwBtF,EAAAA,EAAAA,IAAYuF,EAAAA,GAAAA,sBAM1C,OAJAC,EAAAA,EAAAA,YAAU,WACR3F,EAASsC,EAAAA,GAAAA,cACV,GAAE,CAACtC,KAGF,SAAC4F,EAAA,EAAD,UACGH,GACC,SAAC,mBAAD,KAEA,iCACE,SAACI,EAAA,EAAD,CAAYpC,QAAQ,KAAKzC,GAAI,CAAE6B,GAAI,EAAGC,GAAI,GAA1C,wBAGA,iCACE,SAAC,EAAD,KACA,SAAC+C,EAAA,EAAD,CAAYpC,QAAQ,KAAKzC,GAAI,CAAE6B,GAAI,EAAGC,GAAI,GAA1C,uBAGA,SAAC,EAAD,IACC0C,IAAa,yCACd,SAACM,EAAD,WAMX,C,sHCxCYC,EAA0B,CACrCrE,MAAO7B,EAAAA,KAEJgE,SAAS,0BACTmC,OACAC,QACC,yHACA,4BAEJtE,MAAO9B,EAAAA,KAEJmG,OACAC,QACC,yHACA,4BAEJC,MAAOrG,EAAAA,KAEJoG,QACC,uLACA,uBAEDC,MAAM,uBACNrC,SAAS,qBACZsC,SAAUtG,EAAAA,KAEPuG,IAAI,EAAG,+CACPvC,SAAS,wBAGDwC,EAAuB,CAClCH,MAAOrG,EAAAA,KAEJoG,QACC,uLACA,uBAEDC,MAAM,uBACNrC,SAAS,qBACZsC,SAAUtG,EAAAA,KAEPuG,IAAI,EAAG,+CACPvC,SAAS,wBAGD9D,EAAyB,CACpC2B,MAAO7B,EAAAA,KAEJgE,SAAS,0BACTmC,OACAC,QACC,yHACA,4BAEJtE,MAAO9B,EAAAA,KAEJmG,OACAC,QACC,yHACA,4BAEArE,OAAQ/B,EAAAA,KAELgE,SAAS,YACTmC,OACAC,QACC,6EACA,4B","sources":["components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactsListItem/ContactsListItem.jsx","components/ContactList/ContactList.jsx","skeletons/skeletons.jsx","pages/phoneBook.jsx","validations/validationSchema.js"],"sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\nimport { CssBaseline, Grid, Box, TextField, Button } from '@mui/material';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { MuiTelInput } from 'mui-tel-input';\nimport { phonebookOperations } from 'Redux/phonebook';\nimport { validationsContactForm } from 'validations/validationSchema';\nimport { phonebookSelectors } from 'Redux/phonebook';\n\nexport const ContactForm = props => {\n  const initialValues = {\n    fname: '',\n    lname: '',\n    number: '',\n  };\n\n  const schema = yup.object().shape(validationsContactForm);\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(phonebookSelectors.getItems);\n\n  const handleSubmit = (values, { resetForm }) => {\n    const { fname, lname, number } = values;\n\n    const name = `${fname} ${lname}`;\n    if (contacts.findIndex(contact => contact.name === name) >= 0) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n    const newContact = {\n      name: name,\n      number: number,\n    };\n    dispatch(phonebookOperations.addContacts(newContact));\n    resetForm();\n  };\n\n  return (\n    <Grid container component=\"main\">\n      <CssBaseline />\n      <Grid item xs={12} sm={8} md={6} elevation={6} square=\"true\">\n        <Box\n          sx={{\n            pl: 2,\n            pr: 2,\n            ml: '10',\n            left: 1,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n          border={1}\n        >\n          <Formik\n            initialValues={initialValues}\n            validationSchema={schema}\n            onSubmit={handleSubmit}\n          >\n            {props => {\n              const {\n                values,\n                touched,\n                errors,\n                handleChange,\n                handleBlur,\n                handleSubmit,\n              } = props;\n              return (\n                <form onSubmit={handleSubmit}>\n                  <Grid container spacing={1} sx={{ mt: 1, mb: 3 }}>\n                    <Grid item xs={12} sm={6}>\n                      <TextField\n                        id=\"fname\"\n                        label=\"First Name\"\n                        value={values.fname}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        helperText={touched.fname ? errors.fname : ''}\n                        error={touched.fname && Boolean(errors.fname)}\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <TextField\n                        id=\"lname\"\n                        label=\"Last Name\"\n                        value={values.lname}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        helperText={touched.lname ? errors.lname : ''}\n                        error={touched.lname && Boolean(errors.lname)}\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={12}>\n                      {/* <TextField\n                        id=\"number\"\n                        label=\"Phone number\"\n                        value={values.number}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        helperText={touched.number ? errors.number : ''}\n                        error={touched.number && Boolean(errors.number)}\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                      />*/}\n                      <MuiTelInput\n                        id='number'\n                        preferredCountries={['UA']}\n                        defaultCountry=\"UA\"\n                        onChange={handleChange('number')}\n                        value={values.number}\n                        required\n                        // disableFormatting\n                        onBlur={handleBlur}\n                        helperText={touched.number ? errors.number : ''}\n                        error={touched.number && Boolean(errors.number)}\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                      />\n                    </Grid>\n                    <Grid item xs={12}>\n                      <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        sx={{ mt: 2 }}\n                        xs={12}\n                        sm={12}\n                      >\n                        Add contact\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </form>\n              );\n            }}\n          </Formik>\n        </Box>\n      </Grid>\n    </Grid>\n    // </ThemeProvider>\n  );\n};\n\nexport default ContactForm;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Grid, TextField } from '@mui/material';\nimport { setFilter } from '../../Redux/phonebook/phonebookSlice';\nimport { phonebookSelectors } from 'Redux/phonebook';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(phonebookSelectors.getFilter);\n\n  const onChangeFilter = event => {\n    const { value } = event.target;\n    dispatch(setFilter(value));\n  };\n\n  return (\n    <Grid container spacing={1} sx={{ mt: 1, mb: 1 }}>\n      <Grid item xs={12} sm={8} md={6} elevation={6} square=\"true\">\n        <TextField\n          // className={css.filter}\n          label=\"Find contacts by name\"\n          type=\"text\"\n          name=\"contactsFilter\"\n          onChange={onChangeFilter}\n          value={filter}\n          variant=\"standard\"\n          fullWidth\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Filter;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport {  Grid, Button } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport phonebookOperations from 'Redux/phonebook/phonebookOperations';\n\nexport const ContactsListItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  const onDeleteContact = id => {\n    dispatch(phonebookOperations.deleteContacts(id));\n  };\n\n  return (\n    <>\n      <Grid item xs={3.5} sx={{ mt: 0.5 }}>\n        {/* <Typography variant=\"h8\" md={3}> */}\n        {name}\n        {/* </Typography>*/}\n      </Grid>\n      <Grid item xs={2} sx={{ mt: 0.5 }} >\n        {/* <Typography variant=\"h8\">{number} </Typography> */}\n        {number}\n      </Grid>\n      <Grid item xs sx={{ mb: 0.6 }} >\n        <Button\n          variant=\"outlined\"\n          startIcon={<DeleteIcon />}\n          onClick={() => onDeleteContact(id)}\n          sx={{ pl: 3 }}\n        ></Button>\n\n        {/* <IconButton\n          aria-label=\"delete\"\n          size=\"large\"\n          onClick={() => onDeleteContact(id)}\n        >\n          <DeleteIcon />\n        </IconButton> */}\n      </Grid>\n    </>\n    // </Box>\n  );\n};\n\nContactsListItem.prototype = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default ContactsListItem;\n","import { useSelector } from 'react-redux';\nimport { Grid } from '@mui/material';\nimport ContactsListItem from '../ContactsListItem';\nimport { phonebookSelectors } from 'Redux/phonebook';\n\nconst ContactsList = () => {\n  const contacts = useSelector(phonebookSelectors.getItems);\n  const filter = useSelector(phonebookSelectors.getFilter);\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const visibleContacts = getVisibleContacts();\n\n  return (\n    <Grid container spacing={0}>\n      {visibleContacts.map(({ id, name, number }) => (\n        <Grid\n          container\n          direction=\"row\"\n          spacing={0}\n          // rowSpacing={0}\n          // columnSpacing={0}\n          key={id}\n          // xs={12}\n          // sm={7}\n        >\n          <ContactsListItem id={id} name={name} number={number} />\n        </Grid>\n      ))}\n    </Grid>\n  );\n};\n\nexport default ContactsList;\n","import Skeleton from '@mui/material/Skeleton';\nimport Stack from '@mui/material/Stack';\n\nconst loginSkeleton = () => {\n  return (\n    <Stack spacing={1}>\n      <Skeleton variant=\"rectangular\" width={210} height={60} />\n      <Skeleton variant=\"rectangular\" width={210} height={60} />\n      <Skeleton variant=\"rectangular\" width={210} height={40} />\n      {/* <Skeleton variant=\"rounded\" width={210} height={60} /> */}\n    </Stack>\n  );\n}\n\nconst contactsSkeleton = () => {\n  return (\n    <Stack spacing={1}>\n      <Skeleton variant=\"rectangular\" width={80} height={30} />\n      <Skeleton variant=\"rectangular\" width={210} height={60} />\n      <Skeleton variant=\"rectangular\" width={210} height={40} />\n      <Skeleton variant=\"rounded\" width={210} height={60} />\n      <Skeleton variant=\"rectangular\" width={60} height={20} />\n    </Stack>\n  );\n};\n\nconst skeletons = {\n  loginSkeleton,\n  contactsSkeleton\n};\n\nexport default skeletons;","import ContactForm from 'components/ContactForm';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { Container, Typography } from '@mui/material';\nimport Filter from 'components/Filter';\nimport ContactList from 'components/ContactList';\nimport { phonebookOperations } from 'Redux/phonebook';\nimport { phonebookSelectors } from 'Redux/phonebook';\nimport { authSelectors } from 'Redux/auth';\nimport { skeletons } from 'skeletons';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(phonebookSelectors.getIsLoading);\n  const isFetchingCurrentUser = useSelector(authSelectors.getIsFetchingCurrent);\n\n  useEffect(() => {\n    dispatch(phonebookOperations.getContacts());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      {isFetchingCurrentUser ? (\n        <skeletons.contactsSkeleton />\n      ) : (\n        <>\n          <Typography variant=\"h4\" sx={{ mt: 2, mb: 2 }}>\n            Phonebook\n          </Typography>\n          <>\n            <ContactForm />\n            <Typography variant=\"h5\" sx={{ mt: 2, mb: 0 }}>\n              Contacts\n            </Typography>\n            <Filter />\n            {isLoading && <div>...Loading</div>}\n            <ContactList />\n          </>\n        </>\n      )}\n    </Container>\n  );\n};\n\nexport default Contacts;\n","import * as yup from 'yup';\n\nexport const validationsRegisterForm = {\n  fname: yup\n    .string()\n    .required('First name is required')\n    .trim()\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      'Is not in correct format'\n    ),\n  lname: yup\n    .string()\n    .trim()\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      'Is not in correct format'\n    ),\n  email: yup\n    .string()\n    .matches(\n      /^((([0-9A-Za-z]{1}[-0-9A-z.]{0,30}[0-9A-Za-z]?)|([0-9А-Яа-я]{1}[-0-9А-я.]{0,30}[0-9А-Яа-я]?))@([-A-Za-z]{1,}\\.){1,}[-A-Za-z]{2,})$/,\n      'Enter a valid email'\n    )\n    .email('Enter a valid email')\n    .required('Email is required'),\n  password: yup\n    .string()\n    .min(8, 'Password must contain at least 8 characters')\n    .required('Enter your password'),\n};\n\nexport const validationsLoginForm = {\n  email: yup\n    .string()\n    .matches(\n      /^((([0-9A-Za-z]{1}[-0-9A-z.]{0,30}[0-9A-Za-z]?)|([0-9А-Яа-я]{1}[-0-9А-я.]{0,30}[0-9А-Яа-я]?))@([-A-Za-z]{1,}\\.){1,}[-A-Za-z]{2,})$/,\n      'Enter a valid email'\n    )\n    .email('Enter a valid email')\n    .required('Email is required'),\n  password: yup\n    .string()\n    .min(8, 'Password must contain at least 8 characters')\n    .required('Enter your password'),\n};\n\nexport const validationsContactForm = {\n  fname: yup\n    .string()\n    .required('First name is required')\n    .trim()\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      'Is not in correct format'\n    ),\n  lname: yup\n    .string()\n    .trim()\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      'Is not in correct format'\n    ),\n      number: yup\n        .string()\n        .required('Required')\n        .trim()\n        .matches(\n          /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n          'Is not in correct format'\n        ),\n};\n"],"names":["props","schema","yup","shape","validationsContactForm","dispatch","useDispatch","contacts","useSelector","phonebookSelectors","Grid","container","component","CssBaseline","item","xs","sm","md","elevation","square","Box","sx","pl","pr","ml","left","display","flexDirection","alignItems","border","initialValues","fname","lname","number","validationSchema","onSubmit","values","resetForm","name","findIndex","contact","alert","newContact","phonebookOperations","touched","errors","handleChange","handleBlur","handleSubmit","spacing","mt","mb","TextField","id","label","value","onChange","onBlur","helperText","error","Boolean","margin","variant","fullWidth","preferredCountries","defaultCountry","required","Button","type","filter","event","target","setFilter","ContactsListItem","startIcon","Delete","onClick","onDeleteContact","prototype","PropTypes","visibleContacts","normalizedFilter","toLowerCase","includes","getVisibleContacts","map","direction","loginSkeleton","Stack","Skeleton","width","height","contactsSkeleton","isLoading","isFetchingCurrentUser","authSelectors","useEffect","Container","Typography","ContactList","validationsRegisterForm","trim","matches","email","password","min","validationsLoginForm"],"sourceRoot":""}