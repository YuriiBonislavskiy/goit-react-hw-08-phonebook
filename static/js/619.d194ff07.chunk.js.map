{"version":3,"file":"static/js/619.d194ff07.chunk.js","mappings":"gTAmKA,EAzJ2B,SAAAA,GACzB,IAQMC,EAASC,EAAAA,KAAaC,MAAMC,EAAAA,IAE5BC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,GAAAA,UA2B7B,OACE,UAACC,EAAA,GAAD,CAAMC,WAAS,EAACC,UAAU,OAA1B,WACE,SAACC,EAAA,GAAD,KACA,SAACH,EAAA,GAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,UAAW,EAAGC,OAAO,OAAtD,UACE,SAACC,EAAA,EAAD,CACEC,GAAI,CACFC,GAAI,EACJC,GAAI,EACJC,GAAI,KACJC,KAAM,EACNC,QAAS,OACTC,cAAe,SACfC,WAAY,UAEdC,OAAQ,EAVV,UAYE,SAAC,KAAD,CACEC,cAvDY,CACpBC,MAAO,GACPC,MAAO,GACPC,OAAQ,IAqDAC,iBAAkBjC,EAClBkC,SA5CW,SAACC,EAAD,GAA4B,IAAjBC,EAAgB,EAAhBA,UACtBN,EAAyBK,EAAzBL,MAAOC,EAAkBI,EAAlBJ,MAAOC,EAAWG,EAAXH,OAEhBK,EAAI,UAAMP,EAAN,YAAeC,GAGzB,GADAO,QAAQC,IAAIF,EAAML,GACd1B,EAASkC,WAAU,SAAAC,GAAO,OAAIA,EAAQJ,OAASA,CAArB,KAA8B,EAC1DK,MAAM,GAAD,OAAIL,EAAJ,gCADP,CAIA,IAAMM,EAAa,CACjBN,KAAMA,EACNL,OAAQA,GAEV5B,EAASwC,EAAAA,GAAAA,YAAgCD,IACzCP,GANC,CAOF,EAyBO,SAKG,SAAArC,GACC,IACEoC,EAMEpC,EANFoC,OACAU,EAKE9C,EALF8C,QACAC,EAIE/C,EAJF+C,OACAC,EAGEhD,EAHFgD,aACAC,EAEEjD,EAFFiD,WACAC,EACElD,EADFkD,aAEF,OACE,iBAAMf,SAAUe,EAAhB,UACE,UAACxC,EAAA,GAAD,CAAMC,WAAS,EAACwC,QAAS,EAAG9B,GAAI,CAAE+B,GAAI,EAAGC,GAAI,GAA7C,WACE,SAAC3C,EAAA,GAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,UACE,SAACsC,EAAA,EAAD,CACEC,GAAG,QACHC,MAAM,aACNC,MAAOrB,EAAOL,MACd2B,SAAUV,EACVW,OAAQV,EACRW,WAAYd,EAAQf,MAAQgB,EAAOhB,MAAQ,GAC3C8B,MAAOf,EAAQf,OAAS+B,QAAQf,EAAOhB,OACvCgC,OAAO,QACPC,QAAQ,WACRC,WAAS,OAGb,SAACvD,EAAA,GAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAvB,UACE,SAACsC,EAAA,EAAD,CACEC,GAAG,QACHC,MAAM,YACNC,MAAOrB,EAAOJ,MACd0B,SAAUV,EACVW,OAAQV,EACRW,WAAYd,EAAQd,MAAQe,EAAOf,MAAQ,GAC3C6B,MAAOf,EAAQd,OAAS8B,QAAQf,EAAOf,OACvC+B,OAAO,QACPC,QAAQ,WACRC,WAAS,OAGb,SAACvD,EAAA,GAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,GAAvB,UAaE,SAAC,KAAD,CACEuC,GAAG,SACHW,mBAAoB,CAAC,MACrBC,eAAe,KACfT,SAAUV,EAAa,UACvBS,MAAOrB,EAAOH,OACdmC,UAAQ,EAERT,OAAQV,EACRW,WAAYd,EAAQb,OAASc,EAAOd,OAAS,GAC7C4B,MAAOf,EAAQb,QAAU6B,QAAQf,EAAOd,QACxC8B,OAAO,QACPC,QAAQ,WACRC,WAAS,OAGb,SAACvD,EAAA,GAAD,CAAMI,MAAI,EAACC,GAAI,GAAf,UACE,SAACsD,EAAA,EAAD,CACEC,KAAK,SACLL,WAAS,EACTD,QAAQ,YACR3C,GAAI,CAAE+B,GAAI,GACVrC,GAAI,GACJC,GAAI,GANN,+BAcT,UAOZ,E,oBCjID,EA3Be,WACb,IAAMX,GAAWC,EAAAA,EAAAA,MACXiE,GAAS/D,EAAAA,EAAAA,IAAYC,EAAAA,GAAAA,WAO3B,OACE,SAACC,EAAA,GAAD,CAAMC,WAAS,EAACwC,QAAS,EAAG9B,GAAI,CAAE+B,GAAI,EAAGC,GAAI,GAA7C,UACE,SAAC3C,EAAA,GAAD,CAAMI,MAAI,EAACC,GAAI,GAAIC,GAAI,EAAGC,GAAI,EAAGC,UAAW,EAAGC,OAAO,OAAtD,UACE,SAACmC,EAAA,EAAD,CAEEE,MAAM,wBACNc,KAAK,OACLhC,KAAK,iBACLoB,SAbe,SAAAc,GACrB,IAAQf,EAAUe,EAAMC,OAAhBhB,MACRpD,GAASqE,EAAAA,EAAAA,GAAUjB,GACpB,EAWOA,MAAOc,EACPP,QAAQ,WACRC,WAAS,OAKlB,E,sCCxBYU,EAAmB,SAAC,GAA0B,IAAxBpB,EAAuB,EAAvBA,GAAIjB,EAAmB,EAAnBA,KAAML,EAAa,EAAbA,OACrC5B,GAAWC,EAAAA,EAAAA,MAMjB,OAUE,iCACE,SAACI,EAAA,GAAD,CAAMI,MAAI,EAACC,GAAI,EAAf,SAEGuB,KAGH,SAAC5B,EAAA,GAAD,CAAMI,MAAI,EAACC,GAAI,EAAf,SAEGkB,KAEH,SAACvB,EAAA,GAAD,CAAMI,MAAI,EAACC,IAAE,EAAb,UACE,SAACsD,EAAA,EAAD,CACEL,QAAQ,WACRY,WAAW,SAACC,EAAA,EAAD,IACXC,QAAS,kBA5BO,SAAAvB,GACtBlD,EAASwC,EAAAA,EAAAA,eAAmCU,GAC7C,CA0BsBwB,CAAgBxB,EAAtB,EACTlC,GAAI,CAAEC,GAAI,SAcnB,EAEDqD,EAAiBK,UAAY,CAC3BzB,GAAI0B,IAAAA,OAAAA,WACJ3C,KAAM2C,IAAAA,OAAAA,WACNhD,OAAQgD,IAAAA,OAAAA,YAGV,QCzBA,EA9BqB,WACnB,IAAM1E,GAAWC,EAAAA,EAAAA,IAAYC,EAAAA,GAAAA,UACvB8D,GAAS/D,EAAAA,EAAAA,IAAYC,EAAAA,GAAAA,WAQrByE,EAPqB,WACzB,IAAMC,EAAmBZ,EAAOa,cAChC,OAAO7E,EAASgE,QAAO,SAAA7B,GAAO,OAC5BA,EAAQJ,KAAK8C,cAAcC,SAASF,EADR,GAG/B,CAEuBG,GAExB,OACE,SAAC5E,EAAA,GAAD,CAAMC,WAAS,EAACwC,QAAS,EAAzB,SACG+B,EAAgBK,KAAI,gBAAGhC,EAAH,EAAGA,GAAIjB,EAAP,EAAOA,KAAML,EAAb,EAAaA,OAAb,OACnB,SAACvB,EAAA,GAAD,CACEC,WAAS,EACT6E,UAAU,MACVrC,QAAS,EAHX,UAQE,SAAC,EAAD,CAAkBI,GAAIA,EAAIjB,KAAMA,EAAML,OAAQA,KAFzCsB,EAPY,KAc1B,ECzBKkC,EAAS,CACb9E,UAAW,CACT+E,YAAa,QAEfC,GAAI,CACFC,aAAc,QA0BlB,EAtBiB,WACf,IAAMvF,GAAWC,EAAAA,EAAAA,MACXuF,GAAYrF,EAAAA,EAAAA,IAAYC,EAAAA,GAAAA,cAM9B,OAJAqF,EAAAA,EAAAA,YAAU,WACRzF,EAASwC,EAAAA,GAAAA,cACV,GAAE,CAACxC,KAGF,iBAAK0F,MAAON,EAAO9E,UAAnB,WACE,eAAIoF,MAAON,EAAOE,GAAlB,wBACA,4BACE,SAAC,EAAD,KACA,sCACA,SAAC,EAAD,IACCE,IAAa,yCACd,SAACG,EAAD,SAIP,C,sHCnCYC,EAA0B,CACrClE,MAAO7B,EAAAA,KAEJkE,SAAS,0BACT8B,OACAC,QACC,yHACA,4BAEJnE,MAAO9B,EAAAA,KAEJgG,OACAC,QACC,yHACA,4BAEJC,MAAOlG,EAAAA,KAEJiG,QACC,uLACA,uBAEDC,MAAM,uBACNhC,SAAS,qBACZiC,SAAUnG,EAAAA,KAEPoG,IAAI,EAAG,+CACPlC,SAAS,wBAGDmC,EAAuB,CAClCH,MAAOlG,EAAAA,KAEJiG,QACC,uLACA,uBAEDC,MAAM,uBACNhC,SAAS,qBACZiC,SAAUnG,EAAAA,KAEPoG,IAAI,EAAG,+CACPlC,SAAS,wBAGDhE,EAAyB,CACpC2B,MAAO7B,EAAAA,KAEJkE,SAAS,0BACT8B,OACAC,QACC,yHACA,4BAEJnE,MAAO9B,EAAAA,KAEJgG,OACAC,QACC,yHACA,4BAEAlE,OAAQ/B,EAAAA,KAELkE,SAAS,YACT8B,OACAC,QACC,6EACA,4B","sources":["components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactsListItem/ContactsListItem.jsx","components/ContactList/ContactList.jsx","pages/phoneBook.jsx","validations/validationSchema.js"],"sourcesContent":["import { useDispatch, useSelector } from 'react-redux';\n// import { useState } from 'react';\nimport { CssBaseline, Grid, Box, TextField, Button } from '@mui/material';\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\nimport { MuiTelInput } from 'mui-tel-input';\nimport { phonebookOperations } from 'Redux/phonebook';\nimport { validationsContactForm } from 'validations/validationSchema';\nimport { phonebookSelectors } from 'Redux/phonebook';\n\nexport const ContactForm = props => {\n  const initialValues = {\n    fname: '',\n    lname: '',\n    number: '',\n  };\n\n// const [muiNumber, setMuiNumber] = useState('');\n\n  const schema = yup.object().shape(validationsContactForm);\n\n  const dispatch = useDispatch();\n  const contacts = useSelector(phonebookSelectors.getItems);\n\n  const handleSubmit = (values, { resetForm }) => {\n    const { fname, lname, number } = values;\n    // const { fname, lname } = values;\n    const name = `${fname} ${lname}`;\n\n    console.log(name, number);\n    if (contacts.findIndex(contact => contact.name === name) >= 0) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n    const newContact = {\n      name: name,\n      number: number,\n    };\n    dispatch(phonebookOperations.addContacts(newContact));\n    resetForm();\n  };\n\n  // const handleTelChange = (value) => {\n  //   // matchIsValidTel(value) &&\n  //     setMuiNumber(value);\n  //     initialValues.number = value;\n  //     console.log(initialValues.number)\n  // };\n\n  return (\n    <Grid container component=\"main\">\n      <CssBaseline />\n      <Grid item xs={12} sm={8} md={6} elevation={6} square=\"true\">\n        <Box\n          sx={{\n            pl: 2,\n            pr: 2,\n            ml: '10',\n            left: 1,\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n          border={1}\n        >\n          <Formik\n            initialValues={initialValues}\n            validationSchema={schema}\n            onSubmit={handleSubmit}\n          >\n            {props => {\n              const {\n                values,\n                touched,\n                errors,\n                handleChange,\n                handleBlur,\n                handleSubmit,\n              } = props;\n              return (\n                <form onSubmit={handleSubmit}>\n                  <Grid container spacing={1} sx={{ mt: 1, mb: 3 }}>\n                    <Grid item xs={12} sm={6}>\n                      <TextField\n                        id=\"fname\"\n                        label=\"First Name\"\n                        value={values.fname}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        helperText={touched.fname ? errors.fname : ''}\n                        error={touched.fname && Boolean(errors.fname)}\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <TextField\n                        id=\"lname\"\n                        label=\"Last Name\"\n                        value={values.lname}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        helperText={touched.lname ? errors.lname : ''}\n                        error={touched.lname && Boolean(errors.lname)}\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={12}>\n                      {/* <TextField\n                        id=\"number\"\n                        label=\"Phone number\"\n                        value={values.number}\n                        onChange={handleChange}\n                        onBlur={handleBlur}\n                        helperText={touched.number ? errors.number : ''}\n                        error={touched.number && Boolean(errors.number)}\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                      />*/}\n                      <MuiTelInput\n                        id='number'\n                        preferredCountries={['UA']}\n                        defaultCountry=\"UA\"\n                        onChange={handleChange('number')}\n                        value={values.number}\n                        required\n                        // disableFormatting\n                        onBlur={handleBlur}\n                        helperText={touched.number ? errors.number : ''}\n                        error={touched.number && Boolean(errors.number)}\n                        margin=\"dense\"\n                        variant=\"outlined\"\n                        fullWidth\n                      />\n                    </Grid>\n                    <Grid item xs={12}>\n                      <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        sx={{ mt: 2 }}\n                        xs={12}\n                        sm={12}\n                      >\n                        Add contact\n                      </Button>\n                    </Grid>\n                  </Grid>\n                </form>\n              );\n            }}\n          </Formik>\n        </Box>\n      </Grid>\n    </Grid>\n    // </ThemeProvider>\n  );\n};\n\nexport default ContactForm;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Grid, TextField } from '@mui/material';\nimport { setFilter } from '../../Redux/phonebook/phonebookSlice';\nimport { phonebookSelectors } from 'Redux/phonebook';\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(phonebookSelectors.getFilter);\n\n  const onChangeFilter = event => {\n    const { value } = event.target;\n    dispatch(setFilter(value));\n  };\n\n  return (\n    <Grid container spacing={1} sx={{ mt: 1, mb: 3 }}>\n      <Grid item xs={12} sm={8} md={6} elevation={6} square=\"true\">\n        <TextField\n          // className={css.filter}\n          label=\"Find contacts by name\"\n          type=\"text\"\n          name=\"contactsFilter\"\n          onChange={onChangeFilter}\n          value={filter}\n          variant=\"standard\"\n          fullWidth\n        />\n      </Grid>\n    </Grid>\n  );\n};\n\nexport default Filter;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport {  Grid, Button } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport phonebookOperations from 'Redux/phonebook/phonebookOperations';\n\nexport const ContactsListItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  const onDeleteContact = id => {\n    dispatch(phonebookOperations.deleteContacts(id));\n  };\n\n  return (\n    // <Box\n    //   sx={{\n    //     display: 'flex',\n    //     flexDirection: 'row',\n    //     alignItems: 'center',\n    //     p: 0,\n    //     m: 0,\n    //   }}\n    // >\n    <>\n      <Grid item xs={4}>\n        {/* <Typography variant=\"h8\" md={3}> */}\n        {name}\n        {/* </Typography>*/}\n      </Grid>\n      <Grid item xs={2}>\n        {/* <Typography variant=\"h8\">{number} </Typography> */}\n        {number}\n      </Grid>\n      <Grid item xs>\n        <Button\n          variant=\"outlined\"\n          startIcon={<DeleteIcon />}\n          onClick={() => onDeleteContact(id)}\n          sx={{ pl: 3 }}\n        ></Button>\n\n        {/* <IconButton\n          aria-label=\"delete\"\n          size=\"large\"\n          onClick={() => onDeleteContact(id)}\n        >\n          <DeleteIcon />\n        </IconButton> */}\n      </Grid>\n    </>\n    // </Box>\n  );\n};\n\nContactsListItem.prototype = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n\nexport default ContactsListItem;\n","import { useSelector } from 'react-redux';\nimport { Grid } from '@mui/material';\nimport ContactsListItem from '../ContactsListItem';\nimport { phonebookSelectors } from 'Redux/phonebook';\n\nconst ContactsList = () => {\n  const contacts = useSelector(phonebookSelectors.getItems);\n  const filter = useSelector(phonebookSelectors.getFilter);\n  const getVisibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  const visibleContacts = getVisibleContacts();\n\n  return (\n    <Grid container spacing={0}>\n      {visibleContacts.map(({ id, name, number }) => (\n        <Grid\n          container\n          direction=\"row\"\n          spacing={0}\n          // rowSpacing={0}\n          // columnSpacing={0}\n          key={id}\n        >\n          <ContactsListItem id={id} name={name} number={number} />\n        </Grid>\n      ))}\n    </Grid>\n  );\n};\n\nexport default ContactsList;\n","import ContactForm from 'components/ContactForm';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport Filter from 'components/Filter';\nimport ContactList from 'components/ContactList';\nimport {phonebookOperations} from 'Redux/phonebook';\nimport { phonebookSelectors } from 'Redux/phonebook';\n\nconst styles = {\n  container: {\n    paddingLeft: '20px',\n  },\n  h1: {\n    marginBottom: '4px',\n  },\n};\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(phonebookSelectors.getIsLoading);\n\n  useEffect(() => {\n    dispatch(phonebookOperations.getContacts());\n  }, [dispatch]);\n\n  return (\n    <div style={styles.container}>\n      <h1 style={styles.h1}>Phonebook</h1>\n      <div>\n        <ContactForm />\n        <h2>Contacts</h2>\n        <Filter />\n        {isLoading && <div>...Loading</div>}\n        <ContactList />\n      </div>\n    </div>\n  );\n};\n\nexport default Contacts;\n","import * as yup from 'yup';\n\nexport const validationsRegisterForm = {\n  fname: yup\n    .string()\n    .required('First name is required')\n    .trim()\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      'Is not in correct format'\n    ),\n  lname: yup\n    .string()\n    .trim()\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      'Is not in correct format'\n    ),\n  email: yup\n    .string()\n    .matches(\n      /^((([0-9A-Za-z]{1}[-0-9A-z.]{0,30}[0-9A-Za-z]?)|([0-9А-Яа-я]{1}[-0-9А-я.]{0,30}[0-9А-Яа-я]?))@([-A-Za-z]{1,}\\.){1,}[-A-Za-z]{2,})$/,\n      'Enter a valid email'\n    )\n    .email('Enter a valid email')\n    .required('Email is required'),\n  password: yup\n    .string()\n    .min(8, 'Password must contain at least 8 characters')\n    .required('Enter your password'),\n};\n\nexport const validationsLoginForm = {\n  email: yup\n    .string()\n    .matches(\n      /^((([0-9A-Za-z]{1}[-0-9A-z.]{0,30}[0-9A-Za-z]?)|([0-9А-Яа-я]{1}[-0-9А-я.]{0,30}[0-9А-Яа-я]?))@([-A-Za-z]{1,}\\.){1,}[-A-Za-z]{2,})$/,\n      'Enter a valid email'\n    )\n    .email('Enter a valid email')\n    .required('Email is required'),\n  password: yup\n    .string()\n    .min(8, 'Password must contain at least 8 characters')\n    .required('Enter your password'),\n};\n\nexport const validationsContactForm = {\n  fname: yup\n    .string()\n    .required('First name is required')\n    .trim()\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      'Is not in correct format'\n    ),\n  lname: yup\n    .string()\n    .trim()\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      'Is not in correct format'\n    ),\n      number: yup\n        .string()\n        .required('Required')\n        .trim()\n        .matches(\n          /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/,\n          'Is not in correct format'\n        ),\n};\n"],"names":["props","schema","yup","shape","validationsContactForm","dispatch","useDispatch","contacts","useSelector","phonebookSelectors","Grid","container","component","CssBaseline","item","xs","sm","md","elevation","square","Box","sx","pl","pr","ml","left","display","flexDirection","alignItems","border","initialValues","fname","lname","number","validationSchema","onSubmit","values","resetForm","name","console","log","findIndex","contact","alert","newContact","phonebookOperations","touched","errors","handleChange","handleBlur","handleSubmit","spacing","mt","mb","TextField","id","label","value","onChange","onBlur","helperText","error","Boolean","margin","variant","fullWidth","preferredCountries","defaultCountry","required","Button","type","filter","event","target","setFilter","ContactsListItem","startIcon","Delete","onClick","onDeleteContact","prototype","PropTypes","visibleContacts","normalizedFilter","toLowerCase","includes","getVisibleContacts","map","direction","styles","paddingLeft","h1","marginBottom","isLoading","useEffect","style","ContactList","validationsRegisterForm","trim","matches","email","password","min","validationsLoginForm"],"sourceRoot":""}